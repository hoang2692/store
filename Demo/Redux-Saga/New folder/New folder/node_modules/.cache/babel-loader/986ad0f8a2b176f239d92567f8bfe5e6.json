{"ast":null,"code":"import { PRODUCT_GET_ADMIN_SUCCESS, PRODUCT_SUBMIT_SUCCESS, PRODUCT_DELETE_SUCCESS, PRODUCT_UPDATE_EDIT_DATA_SUCCESS } from \"../../types/product\";\n\nvar findID = (data, id) => {\n  var result = -1;\n  data.forEach((data, index) => {\n    if (data.id === id) {\n      // \n      result = index;\n    }\n  });\n  return result;\n};\n\nvar initialState = {\n  data: []\n};\n\nlet reducer = (state = initialState, action) => {\n  switch (action.type) {\n    //GET API\n    case PRODUCT_GET_ADMIN_SUCCESS:\n      return { ...state,\n        data: action.payload\n      };\n    //SUBMIT\n\n    case PRODUCT_SUBMIT_SUCCESS:\n      return { ...state\n      };\n    // DELETE\n\n    case PRODUCT_DELETE_SUCCESS:\n      return { ...state,\n        data: state.data.filter(e => e.id !== action.payload)\n      };\n    // UPDATE\n\n    case PRODUCT_UPDATE_EDIT_DATA_SUCCESS:\n      var index = -1;\n      index = findID(state.data, action.payload.id); // so sánh nè\n\n      state.data[index] = action.payload;\n      return { ...state,\n        data: [...state.data]\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Develop/Demo/Redux-Saga/New folder/New folder/src/redux/reducer/product/productAdmin.js"],"names":["PRODUCT_GET_ADMIN_SUCCESS","PRODUCT_SUBMIT_SUCCESS","PRODUCT_DELETE_SUCCESS","PRODUCT_UPDATE_EDIT_DATA_SUCCESS","findID","data","id","result","forEach","index","initialState","reducer","state","action","type","payload","filter","e"],"mappings":"AAAA,SACEA,yBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,gCAJF,QAMO,qBANP;;AAQA,IAAIC,MAAM,GAAI,CAACC,IAAD,EAAMC,EAAN,KAAY;AAExB,MAAIC,MAAM,GAAE,CAAC,CAAb;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAa,CAACH,IAAD,EAAMI,KAAN,KAAgB;AAC3B,QAAGJ,IAAI,CAACC,EAAL,KAAYA,EAAf,EAAkB;AAAG;AAEnBC,MAAAA,MAAM,GAACE,KAAP;AACD;AACF,GALD;AAMA,SAAOF,MAAP;AACD,CAVD;;AAYA,IAAIG,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAE;AADW,CAAnB;;AAGA,IAAIM,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKd,yBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAFR,OAAP;AAKF;;AACA,SAAKd,sBAAL;AACE,aAAO,EACL,GAAGW;AADE,OAAP;AAGF;;AACA,SAAKV,sBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELP,QAAAA,IAAI,EAAEO,KAAK,CAACP,IAAN,CAAWW,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACX,EAAF,KAASO,MAAM,CAACE,OAAzC;AAFD,OAAP;AAMF;;AACA,SAAKZ,gCAAL;AACE,UAAIM,KAAK,GAAG,CAAC,CAAb;AACAA,MAAAA,KAAK,GAAGL,MAAM,CAACQ,KAAK,CAACP,IAAP,EAAYQ,MAAM,CAACE,OAAP,CAAeT,EAA3B,CAAd,CAFF,CAEgD;;AAC9CM,MAAAA,KAAK,CAACP,IAAN,CAAWI,KAAX,IAAoBI,MAAM,CAACE,OAA3B;AACA,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,IAAI,EAAE,CAAC,GAAGO,KAAK,CAACP,IAAV;AAFD,OAAP;;AAKF;AACE;AAhCJ;;AAkCA,SAAOO,KAAP;AACD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import {\r\n  PRODUCT_GET_ADMIN_SUCCESS,\r\n  PRODUCT_SUBMIT_SUCCESS,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_UPDATE_EDIT_DATA_SUCCESS,\r\n\r\n} from \"../../types/product\";\r\n\r\nvar findID  = (data,id) =>{\r\n \r\n  var result= -1;\r\n  data.forEach((data,index) => {\r\n    if(data.id === id){  // \r\n\r\n      result=index;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nvar initialState = {\r\n  data: [],\r\n};\r\nlet reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //GET API\r\n    case PRODUCT_GET_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n\r\n    //SUBMIT\r\n    case PRODUCT_SUBMIT_SUCCESS:\r\n      return {\r\n        ...state\r\n      };\r\n    // DELETE\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((e) => e.id !== action.payload),\r\n      };\r\n\r\n\r\n    // UPDATE\r\n    case PRODUCT_UPDATE_EDIT_DATA_SUCCESS:\r\n      var index = -1\r\n      index = findID(state.data,action.payload.id); // so sánh nè\r\n      state.data[index] = action.payload;\r\n      return {\r\n        ...state,\r\n        data: [...state.data]\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}